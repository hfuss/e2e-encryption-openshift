<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.brix4dayz.samples</groupId>
    <artifactId>e2e-encryption-openshift</artifactId>
    <packaging>pom</packaging>
    <version>0.1.0-SNAPSHOT</version>

    <properties>
        <docker.registry>index.docker.io</docker.registry>
        <docker.repo>brix4dayz</docker.repo>
        <image.version>dev</image.version>
        <java.version>11</java.version>
        <java-release.version>${java.version}</java-release.version>
        <jib.version>1.0.0</jib.version>
        <maven-jar.version>3.1.0</maven-jar.version>
        <maven-compiler.version>3.8.0</maven-compiler.version>
        <micrometer-prometheus.version>1.1.3</micrometer-prometheus.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring-boot.version>2.1.4.RELEASE</spring-boot.version>
    </properties>

    <modules>
        <module>hello-tls</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${micrometer-prometheus.version}</version>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <release>${java-release.version}</release>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <configuration>
                        <classifier>exec</classifier>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <from>
                            <image>library/openjdk:11.0.3-jre-slim</image>
                        </from>
                        <to>
                            <image>${docker.registry}/${docker.repo}/${project.artifactId}:${image.version}</image>
                        </to>
                        <container>
                            <jvmFlags>
                                <jvmFlag>-XX:+ExitOnOutOfMemoryError</jvmFlag>
                            </jvmFlags>
                            <ports>
                                <port>8080</port>
                                <port>8443</port>
                            </ports>
                        </container>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
